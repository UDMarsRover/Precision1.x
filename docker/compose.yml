version: '3'
services:

  # Define our service (container) for ROS Master Node
  rover_host:
    container_name: rover_host
    hostname: rover_host
    # Define where Docker Composde should get the image from
    build:
      dockerfile: ./Dockerfile
      target: rover_host
    
    stdin_open: true        # docker run -i
    tty: true               # docker run -t

    # Set enviornment variables
    environment:
      - "ROS_IP=192.0.1.3"        # The IP address of the ROS Host Node
      - "ROS_MASTER_URI=http://192.0.1.3:11311"  # The IP address of the ROS Master Node
      - DISPLAY=${DISPLAY}

    # Attach the network card to the container
    networks:
      rosnet:
        ipv4_address: 192.0.1.3

    #The startup command for this service, run the entrypoint script then run roscore command
    #command: roslaunch ...

    volumes:
      - type: bind
        source: ./..
        target: /home/udmrt/precision1

<<<<<<< HEAD
    #entrypoint: /bin/bash
    devices:
      #TBD -  For USB Inputs and 
      #- /dev/ttyUSB0:/dev/ttyUSB0
      #- /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/video0:/dev/video0


  #rover_aux:
    # Define where Docker Composde should get the image from
  #  build:
  #    dockerfile: ./Dockerfile
  #    target: rover_aux
    
  #  stdin_open: true        # docker run -i
  #  tty: true               # docker run -t

    # Set enviornment variables
  #  environment:
  #    - "ROS_IP=192.0.1.4"        # The IP address of the ROS Aux Node
  #    - "ROS_MASTER_URI=http://192.0.1.2:11311"  # The IP address of the ROS Master Node

    # Attach the network card to the container
  #  networks:
  #    rosnet:
  #      ipv4_address: 192.0.1.4

    #The startup command for this service, run the entrypoint script then run roscore command
    #command: roslaunch ...


  #  volumes:
  #    - type: bind
  #      source: ./..
  #      target: /home/udmrt/precision1
    #devices:
      #TBD -  For USB Inputs and 


  #ros_master:
    # Define where Docker Composde should get the image from
  #  build:
  #    dockerfile: ./Dockerfile
  #    target: rover_dev_main_v1.0
    
  #  stdin_open: true        # docker run -i
  #  tty: true               # docker run -t

    # Set enviornment variables
  #  environment:
  #    - "ROS_IP=192.0.1.2"  # The IP address of out ROS Master Node

    # Attach the network card to the container
  #  networks:
  #    rosnet:
  #      ipv4_address: 192.0.1.2

    #The startup command for this service, run the entrypoint script then run roscore command
  #  command: /bin/bash -c   "source /opt/ros/noetic/setup.bash && \
  #                          cd /home/udmrt/precision1 && \
  #                          catkin_make && \
  #                          source ./devel/setup.bash &&\
  #                          roscore"
  #  volumes:
  #    - type: bind
  #      source: ./..
  #      target: /home/udmrt/precision1
    #devices:
      #TBD -  For USB Inputs and 

  # Define additional containers here under the services header

=======
      # Mac Device Pass Through for Arduino Mega (Motors)
      - type: bind
        source: /dev/cu.usbmodem14101
        target: /dev/ttyUSB3

    #devices:
      #- /dev/ttyUSB0:/dev/ttyUSB0           # Camera
      #- /dev/ttyUSB1:/dev/ttyUSB1           # Main Comms
      #- /dev/ttyUSB2:/dev/ttyUSB2           # Camera Comms
      #- /dev/cu.usbmodem14101:/dev/ttyUSB3   # Arduino Mega Address (Motors)
>>>>>>> deployed


# Virtual Network card for systems
networks:
  rosnet:
    driver: bridge
    ipam:
     config:
       - subnet: 192.0.1.0/24
         gateway: 192.0.1.1